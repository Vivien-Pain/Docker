security:
    providers:
        app_user_provider:
            entity:
                class: 'App\Entity\User'
                property: 'email'

    firewalls:
        main:
            # Indique le nom de la route pour le formulaire de login
            form_login:
                login_path: lego_store_login
                check_path: lego_store_login
                default_target_path: /dashboard  # Redirection après une connexion réussie
                username_parameter: _username  # Paramètre de l'email
                password_parameter: _password  # Paramètre du mot de passe

            logout:
                path: lego_store_logout
                invalidate_session: true

    # Contrôle d'accès aux différentes routes
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/premium, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
